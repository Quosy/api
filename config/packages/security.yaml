security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    providers:
        our_db_provider:
            entity:
                class: App\Entity\User
                property: username
        in_memory: { memory: ~ }

    firewalls:
        login:
            pattern:  ^/login
            stateless: true
            anonymous: true
            provider: our_db_provider
            json_login:
                check_path: /login
                username_path: username
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern:   ^/
            provider: our_db_provider
            stateless: true
            anonymous: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

    access_control:
          - { path: ^/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
          - { path: ^/api/users, role: IS_AUTHENTICATED_ANONYMOUSLY }
          - { path: ^/api/activities, role: IS_AUTHENTICATED_FULLY }
          - { path: ^/api/members, role: IS_AUTHENTICATED_FULLY }
          - { path: ^/api/statements, role: IS_AUTHENTICATED_FULLY }
          - { path: ^/api/types, role: IS_AUTHENTICATED_FULLY }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
